<pre>
  BIP: wallet-labels
  Layer: Applications
  Title: Wallet Labels Export Format
  Author: Craig Raw <craig@sparrowwallet.com>
  Comments-Summary: No comments yet.
  Comments-URI: https://github.com/bitcoin/bips/wiki/Comments:BIP-wallet-labels
  Status: Draft
  Type: Informational
  Created: 2022-08-23
  License: BSD-2-Clause
</pre>

==Abstract==

This document specifies a format for the export of labels that may be attached to various common types of records in a wallet.

==Copyright==

This BIP is licensed under the BSD 2-clause license.

==Motivation==

The export and import of funds across different Bitcoin wallet applications is well defined through standards such as BIP39, BIP32, BIP44 etc.
These standards are well supported and allow users to move easily between different wallets.
There is, however, no defined standard to transfer any labels the user may have applied to the transactions, addresses, public keys, inputs, outputs or xpubs in their wallet.
The UTXO model that Bitcoin uses makes these labels particularly valuable as they may indicate the source of funds, whether received externally or as a result of change from a prior transaction.
In both cases, care must be taken when spending to avoid undesirable leaks of private information.
Labels provide valuable guidance in this regard, and have even become mandatory when spending in several Bitcoin wallets.
Allowing users to import and export their labels in a standardized way ensures that they do not experience lock-in to a particular wallet application.
As a secondary goal, by using a textual format this BIP seeks to make manual or bulk management of labels accessible to users outside of wallet applications.

==Rationale==

While there is currently no widely accepted format for exporting and importing labels, there are existing formats in use.
SLIP-0015<ref>[https://github.com/satoshilabs/slips/blob/master/slip-0015.md SLIP-0015]</ref> defines a format for exporting address and output labels, but requires encryption using a private key associated with the wallet seed, and thus cannot be used independently by coordinator wallets which cannot access private keys.
The Electrum wallet imports and exports address and transaction labels in a JSON format which could be extended to support other record types, but the JSON format used is not self describing and cannot be streamed.

==Specification==

In order to make the format lightweight and well structured, this BIP uses a JSON format. 
Further, the JSON Lines format is used (also called newline-delimited JSON)<ref>[https://jsonlines.org/ jsonlines.org]</ref>. 
This allows the format to be streamed, and limits the potential for formatting errors to invalidate an entire import.

Further to the JSON Lines specification, an export of labels from a wallet must be a UTF-8 encoded text file, containing one record per line consisting of a valid JSON object.
Lines are separated by <tt>\n</tt>.
Each JSON object must contain 3 members, defined as follows:

| Reference        | Description                                                                                          |
| ---------------- | ---------------------------------------------------------------------------------------------------- |
| <tt>type</tt>    | One of <tt>tx</tt>, <tt>addr</tt>, <tt>pubkey</tt>, <tt>input</tt>, <tt>output</tt> or <tt>xpub</tt> |
| <tt>ref</tt>     | Reference to the transaction, address, public key, input, output or xpub                             |
| <tt>label</tt>   | Label applied to the reference                                                                       |

The reference is defined for each <tt>type</tt> as follows:

| Type            | Description                                          | Example                                                                                                                  |
| --------------- | ---------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------ |
| <tt>tx</tt>     | Transaction id in hexadecimal format                 | <tt>f91d0a8a78462bc59398f2c5d7a84fcff491c26ba54c4833478b202796c8aafd</tt>                                                |
| <tt>addr</tt>   | Address in base58 or bech32 format                   | <tt>bc1q34aq5drpuwy3wgl9lhup9892qp6svr8ldzyy7c</tt>                                                                      |
| <tt>pubkey</tt> | 32 or 33 byte public key in hexadecimal format       | <tt>0283409659355b6d1cc3c32decd5d561abaac86c37a353b52895a5e6c196d6f448</tt>                                              |
| <tt>input</tt>  | Transaction id and input index separated by a colon  | <tt>f91d0a8a78462bc59398f2c5d7a84fcff491c26ba54c4833478b202796c8aafd:0</tt>                                              |
| <tt>output</tt> | Transaction id and output index separated by a colon | <tt>f91d0a8a78462bc59398f2c5d7a84fcff491c26ba54c4833478b202796c8aafd:1</tt>                                              |
| <tt>xpub</tt>   | Extended public key as defined by BIP32              | <tt>xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8</tt> |

==Importing==

An importing wallet may ignore records it does not store, and truncate labels if necessary.
Wallets importing public key records may derive addresses from them to match against known wallet addresses.
Wallets importing xpubs may match them against signers, for example in a multisig setup.

==Test Vectors==

The following fragment represents a wallet label export:
<pre>
{ type="tx" ref="f91d0a8a78462bc59398f2c5d7a84fcff491c26ba54c4833478b202796c8aafd" label="Transaction" }
{ type="addr" ref="bc1q34aq5drpuwy3wgl9lhup9892qp6svr8ldzyy7c" label="Address" }
{ type="pubkey" ref="0283409659355b6d1cc3c32decd5d561abaac86c37a353b52895a5e6c196d6f448" label="Public Key" }
{ type="input" ref="f91d0a8a78462bc59398f2c5d7a84fcff491c26ba54c4833478b202796c8aafd:0" label="Input" }
{ type="output" ref="f91d0a8a78462bc59398f2c5d7a84fcff491c26ba54c4833478b202796c8aafd:1" label="Output" }
{ type="xpub" ref="xpub661MyMwAqRbcFtXgS5sYJABqqG9YLmC4Q1Rdap9gSE8NqtwybGhePY2gZ29ESFjqJoCu1Rupje8YtGqsefD265TMg7usUDFdp6W1EGMcet8" label="Extended Public Key" }
</pre>

==Reference Implementation==

TBD

==References==

<references />
